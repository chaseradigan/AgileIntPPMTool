{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","actions/backlogActions.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","end_date","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","initalState","middleware","thunk","store","__REDUX_DEVTOOLS_EXTENSION__","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","getBacklog","backlog_id","sort","ProjectTask","pt_id","deleteProjectTask","pt","dataTransfer","setData","priorityString","priorityClass","priority","draggable","onDragStart","summary","acceptanceCriteria","dueDate","_ref6","_callee6","_context6","_x6","Backlog","onDragOver","newstatus","getData","updateProjectTaskStatus","_this2","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","onDrop","_ref5","_callee5","_context5","patch","_x5","ProjectBoard","console","log","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","newTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","Layout_Header","exact","path","Switch","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3242d31a.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (window.confirm(\"Are you sure you want to delete this project?\")) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for backlog actions\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n//types for login and registration\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n              <h6>Due Date: {project.end_date}</h6>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\")) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg \"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\n//Fix bug with priority in Spring Boot Server, needs to check null first\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = (backlog_id, sort) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`, {\r\n      params: {\r\n        sort: sort\r\n      }\r\n    });\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProjectTaskStatus = (\r\n  backlog_id,\r\n  pt_id,\r\n  newstatus\r\n) => async dispatch => {\r\n  const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n  res.data.status = newstatus;\r\n  await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, res.data);\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  onDragStart(e, pt) {\r\n    e.dataTransfer.setData(\"pt_id\", pt.projectSequence);\r\n    e.dataTransfer.setData(\"backlog_id\", pt.projectIdentifier);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div\r\n        draggable\r\n        onDragStart={e => this.onDragStart(e, project_task)}\r\n        className=\"card mb-1 bg-light\"\r\n      >\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <h6>Due Date: {project_task.dueDate}</h6>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n              project_task.projectSequence\r\n            }`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  updateProjectTaskStatus,\r\n  getBacklog\r\n} from \"../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Backlog extends Component {\r\n  constructor() {\r\n    super();\r\n    this.onDragOver = this.onDragOver.bind(this);\r\n  }\r\n  onDragOver(e) {\r\n    e.preventDefault();\r\n  }\r\n  async onDrop(e, newstatus) {\r\n    let pt_id = e.dataTransfer.getData(\"pt_id\");\r\n    let backlog_id = e.dataTransfer.getData(\"backlog_id\");\r\n    await this.props.updateProjectTaskStatus(backlog_id, pt_id, newstatus);\r\n    this.props.getBacklog(backlog_id, 0);\r\n  }\r\n\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"col-md-4\"\r\n            onDragOver={this.onDragOver}\r\n            onDrop={e => this.onDrop(e, \"TO_DO\")}\r\n          >\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              // insert tasks here\r\n            }\r\n          </div>\r\n          <div\r\n            className=\"col-md-4\"\r\n            onDragOver={this.onDragOver}\r\n            onDrop={e => this.onDrop(e, \"IN_PROGRESS\")}\r\n          >\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div\r\n            className=\"col-md-4\"\r\n            onDragOver={this.onDragOver}\r\n            onDrop={e => this.onDrop(e, \"DONE\")}\r\n          >\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nBacklog.propTypes = {\r\n  updateProjectTaskStatus: PropTypes.func.isRequired,\r\n  getBacklog: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { updateProjectTaskStatus, getBacklog }\r\n)(Backlog);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n      sort: 0\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    console.log(\"sort\", this.state.sort);\r\n    e.preventDefault();\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id, this.state.sort);\r\n  }\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id, this.state.sort);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER BUG\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n\r\n        <form onSubmit={this.onSubmit}>\r\n          <select\r\n            className=\"custom-dropdown\"\r\n            name=\"sort\"\r\n            value={this.state.sort}\r\n            onChange={this.onChange}\r\n          >\r\n            <option value={\"0\"}>Sort By</option>\r\n            <option value={\"1\"}>Priority</option>\r\n            <option value={\"2\"}>Due Date</option>\r\n            <option value={\"3\"}>ProjectSequence</option>\r\n          </select>\r\n          <input type=\"submit\" className=\"btn btn-primary btn-sm\" />\r\n        </form>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSequence}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport Login from \"./components/UserManagement/Login\";\r\nimport setJWTToken from \"./securityUtils/setJWTToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\";\r\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\r\nimport jwt_decode from \"jwt-decode\";\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\nif (jwtToken) {\r\n  setJWTToken(jwtToken);\r\n  const decoded_jwtToken = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded_jwtToken\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded_jwtToken.exp < currentTime) {\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header />\r\n            {\r\n              //Public Routes\r\n            }\r\n\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n\r\n            {\r\n              //Private Routes\r\n            }\r\n            <Switch>\r\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateProject/:id\"\r\n                component={UpdateProject}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/projectBoard/:id\"\r\n                component={ProjectBoard}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/addProjectTask/:id\"\r\n                component={AddProjectTask}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\r\n                component={UpdateProjectTask}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}