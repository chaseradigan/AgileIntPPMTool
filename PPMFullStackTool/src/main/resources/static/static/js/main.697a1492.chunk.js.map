{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","sent","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","href","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","_x2","Header","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","combineReducers","length","undefined","action","objectSpread","filter","initalState","middleware","thunk","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","App","es","BrowserRouter","Layout_Header","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.697a1492.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (window.confirm(\"Are you sure you want to delete this project?\")) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <a href=\"#\">\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </a>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  delteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"Dashboard.html\">\r\n            Personal Project Management Tool\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/dashboard\">\r\n                  Dashboard\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link \" href=\"register.html\">\r\n                  Sign Up\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"login.html\">\r\n                  Login\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\")) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg \"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header />\r\n            <Route exact path=\"/dashboard\" component={Dashboard} />\r\n            <Route exact path=\"/addProject\" component={AddProject} />\r\n            <Route exact path=\"/updateProject/:id\" component={UpdateProject} />\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}